.chat-screen {
  background-color: #abc1d1;
  height: 120vh; /* 상태창은 물론, 헤더가 포지션 픽스트가 잘 이루어졌는지 확인하기 위해 길이를 조절함. */
}

.chat-screen .alt-header {
  position: fixed; /* position: fixed;와 width: 100%;와 box-sizing: border-box;는 세트다. position: absolute;(부모)와 position: relative;(자식)이 세트인 것처럼 */
  width: 100%;
  box-sizing: border-box; /* 포지션 픽스트의 삼종세트를 기억하자. */
  top: 0; /* 상단 또는 최상단 고정이라면, 마진 패딩을 별도로 두고서, top: 0;을 같이 써야 한다. 사실 상 3+1 같은 존재(위치 잡는 것) */
  z-index: 1;
}

.chat-screen .status-bar {
  z-index: 2; /* z-index는 레이어 위치(=순서. 기본 값 = 0, 숫자가 낮을수록 먼저 시작한 것), z-index: 2;를 이용하여 챗 스크린 스태이터스 바를 0보다 위로 두면, 알트 헤더의 배경색에 가려지지 않는다. -- 포지션 앱솔루트나 포지션 픽스트에만 적용(안 그러면 겹칠 일이 없어서 쓸 일이 없음) */
}

.chat-screen .status-bar,
.chat-screen .alt-header {
  background-color: #abc1d1;
}

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.main-chat {
  margin-top: 180px;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.3s linear;
}

.chat__timestamp {
  color: white;
  font-size: 18px;
  background-color: #92a4b2;
  padding: 15px;
  border-radius: 30px;
  margin-bottom: 25px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}

.message-row img {
  width: 55px;
  height: 55px;
  border-radius: 35%;
  margin-right: 15px;
}

.message__author {
  opacity: 0.8;
  font-size: 20px;
  margin-bottom: 10px;
  display: block;
}

.message__info {
  display: flex;
  align-items: flex-end;
}

.message__bubble {
  background-color: white;
  padding: 20px;
  border-radius: 25px;
  border-top-left-radius: 0%;
  font-size: 25px;
  margin-right: 10px;
}

.message__time {
  opacity: 0.8;
  font-size: 17px;
}

.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(
    --ocean
  ); /* 색상 변수를 --색상 이런 식으로 표기하는 이유는, BEM의 약속과 같다고 볼 수 있다 */
  border-top-right-radius: 0px;
  border-top-left-radius: 25px;
  margin-right: 0px;
  margin-left: 10px;
}

/* 
.message-row--own .message__bubble {
  order: 1; 
}
.message-row--own .message__time {
  order: 0;
}
*/
/* order는 display: flex; 처리된 태그의 자식 태그에만 적용된다. 아래는 위의 코드와 동일한 의미를 갖는 코드 */
.message-row--own .message__info {
  flex-direction: row-reverse; /* HTML의 선택자 자식 태그들의 위치를 거꾸로 한다. HTML을 건드리지 않고서. 위와 마찬가지로 info가 flex; 이기에 그 자식 태그들의 로우리버스가 가능 */
}

.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  box-sizing: border-box;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  align-items: center;
  transition: all 0.3s ease-in-out;
}

.reply .reply__column:first-child {
  width: 10%;
}
.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}

.reply i {
  opacity: 0.5;
  font-size: 26px;
}

.reply input {
  padding: 14px 0;
  width: 100%;
  border: var(--main-border);
  border-radius: 20px;
  transition: all 0.3s ease-in-out;
}
.reply input::placeholder {
  padding: 0 15px;
  font-size: 15px;
}

.reply__column span {
  position: absolute;
  top: 21px;
}

.reply__column:last-child > i, /* 화살표(손자 제외 자식만 해당)를 주는 이유는, 손자 격인 화살표에 적용하고 싶지 않은 부분이기 때문 */
.reply__column:last-child button {
  position: absolute;
  right: 2px;
  top: 4px;
}
.reply__column:last-child > i {
  right: 60px;
  top: 21px;
}
.reply__column button {
  background-color: var(--ocean);
  border: none;
  width: 35px;
  height: 35px;
  border-radius: 50%;
}
.reply__column button i {
  opacity: 1;
}
.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

.reply .reply__column:first-child,
.reply .fa-face-smile,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-face-smile,
.reply:focus-within button {
  opacity: 0;
}

.reply input:focus {
  /* =.reply:focus-within input {} */
  width: 98vw;
  transform: translateX(-12.5%) translateY(-80px);
}
.reply:focus-within {
  transform: translateY(80px);
}
